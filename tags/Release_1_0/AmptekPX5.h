/*----- PROTECTED REGION ID(AmptekPX5.h) ENABLED START -----*/
//=============================================================================
//
// file :        AmptekPX5.h
//
// description : Include for the AmptekPX5 class.
//
// project :     AmptekPX5.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef AMPTEKPX5_H
#define AMPTEKPX5_H
#include <tango.h>
#include "amptek.h"
/*----- PROTECTED REGION END -----*/	//	AmptekPX5.h

/**
 *  AmptekPX5 class description:
 *    Device server to control the MCA Amptek PX5. 
 *    The device server implements the communication by UDP socket. It can start and stop one acquisition and after read the Spectrum data. 
 *    In addition it exports some configuration attributes and a command to send ascii commands.
 *     
 */

namespace AmptekPX5_ns
{
/*----- PROTECTED REGION ID(AmptekPX5::Additional Class Declarations) ENABLED START -----*/

		//		Additional Class Declarations

	/*----- PROTECTED REGION END -----*/	//	AmptekPX5::Additional Class Declarations

class AmptekPX5 : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(AmptekPX5::Data Members) ENABLED START -----*/

	//		Add your own data members
	AmptekCommHandler* commHandler;
	 bool thread_exists;
	/*----- PROTECTED REGION END -----*/	//	AmptekPX5::Data Members

//	Device property data members
public:
	//	Hostname:	Host name of PX5
	string	hostname;
	//	Port:	UDP port number
	Tango::DevLong	port;
	//	Timeout:	socket timeout for receiving communication
	Tango::DevDouble	timeout;
	//	NrOfUdpAttempts:	How many time udp request is repeated
	Tango::DevUShort	nrOfUdpAttempts;

//	Attribute data members
public:
	Tango::DevDouble	*attr_AcquisitionTime_read;
	Tango::DevString	*attr_AuxOut1_read;
	Tango::DevLong	*attr_Clock_read;
	Tango::DevShort	*attr_CoarseGain_read;
	Tango::DevString	*attr_Con1_read;
	Tango::DevDouble	*attr_DeadTime_read;
	Tango::DevULong	*attr_FastCount_read;
	Tango::DevDouble	*attr_FineGain_read;
	Tango::DevDouble	*attr_FlatTopWidth_read;
	Tango::DevULong	*attr_MCAC_read;
	Tango::DevDouble	*attr_PeakingTime_read;
	Tango::DevString	*attr_PileupReject_read;
	Tango::DevULong	*attr_SCA1HT_read;
	Tango::DevULong	*attr_SCA1LT_read;
	Tango::DevULong	*attr_SCA2HT_read;
	Tango::DevULong	*attr_SCA2LT_read;
	Tango::DevULong	*attr_SCA3HT_read;
	Tango::DevULong	*attr_SCA3LT_read;
	Tango::DevULong	*attr_SCA4HT_read;
	Tango::DevULong	*attr_SCA4LT_read;
	Tango::DevULong	*attr_SCA5HT_read;
	Tango::DevULong	*attr_SCA5LT_read;
	Tango::DevULong	*attr_SCA6HT_read;
	Tango::DevULong	*attr_SCA6LT_read;
	Tango::DevULong	*attr_SCA7HT_read;
	Tango::DevULong	*attr_SCA7LT_read;
	Tango::DevULong	*attr_SCA8HT_read;
	Tango::DevULong	*attr_SCA8LT_read;
	Tango::DevULong	*attr_SlowCount_read;
	Tango::DevDouble	*attr_TotalGain_read;
	Tango::DevULong	*attr_CountsRoI1_read;
	Tango::DevULong	*attr_CountsRoI2_read;
	Tango::DevULong	*attr_CountsRoI3_read;
	Tango::DevULong	*attr_CountsRoI4_read;
	Tango::DevULong	*attr_CountsRoI5_read;
	Tango::DevULong	*attr_CountsRoI6_read;
	Tango::DevULong	*attr_CountsRoI7_read;
	Tango::DevULong	*attr_CountsRoI8_read;
	Tango::DevULong	*attr_Spectrum_read;

//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	AmptekPX5(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	AmptekPX5(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	AmptekPX5(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */	
	~AmptekPX5() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Read the device properties from database
	 */
	void get_device_property();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : AmptekPX5::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);
	//--------------------------------------------------------
	/*
	 *	Method      : AmptekPX5::write_attr_hardware()
	 *	Description : Hardware writing for attributes.
	 */
	//--------------------------------------------------------
	virtual void write_attr_hardware(vector<long> &attr_list);

/**
 *	Attribute AcquisitionTime related methods
 *	Description: It sets the preset acquisition time.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_AcquisitionTime(Tango::Attribute &attr);
	virtual void write_AcquisitionTime(Tango::WAttribute &attr);
	virtual bool is_AcquisitionTime_allowed(Tango::AttReqType type);
/**
 *	Attribute AuxOut1 related methods
 *	Description: Auxiliary output
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_AuxOut1(Tango::Attribute &attr);
	virtual void write_AuxOut1(Tango::WAttribute &attr);
	virtual bool is_AuxOut1_allowed(Tango::AttReqType type);
/**
 *	Attribute Clock related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_Clock(Tango::Attribute &attr);
	virtual void write_Clock(Tango::WAttribute &attr);
	virtual bool is_Clock_allowed(Tango::AttReqType type);
/**
 *	Attribute CoarseGain related methods
 *	Description: It Selects the analog gain.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_CoarseGain(Tango::Attribute &attr);
	virtual void write_CoarseGain(Tango::WAttribute &attr);
	virtual bool is_CoarseGain_allowed(Tango::AttReqType type);
/**
 *	Attribute Con1 related methods
 *	Description: Connector 1 output
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_Con1(Tango::Attribute &attr);
	virtual void write_Con1(Tango::WAttribute &attr);
	virtual bool is_Con1_allowed(Tango::AttReqType type);
/**
 *	Attribute DeadTime related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_DeadTime(Tango::Attribute &attr);
	virtual bool is_DeadTime_allowed(Tango::AttReqType type);
/**
 *	Attribute FastCount related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_FastCount(Tango::Attribute &attr);
	virtual bool is_FastCount_allowed(Tango::AttReqType type);
/**
 *	Attribute FineGain related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_FineGain(Tango::Attribute &attr);
	virtual void write_FineGain(Tango::WAttribute &attr);
	virtual bool is_FineGain_allowed(Tango::AttReqType type);
/**
 *	Attribute FlatTopWidth related methods
 *	Description: It selects the flat top width of the trapezoidal shaper. A flat top fo 0uS will result in a triangular shape, not trapezoidal.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_FlatTopWidth(Tango::Attribute &attr);
	virtual void write_FlatTopWidth(Tango::WAttribute &attr);
	virtual bool is_FlatTopWidth_allowed(Tango::AttReqType type);
/**
 *	Attribute MCAC related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_MCAC(Tango::Attribute &attr);
	virtual void write_MCAC(Tango::WAttribute &attr);
	virtual bool is_MCAC_allowed(Tango::AttReqType type);
/**
 *	Attribute PeakingTime related methods
 *	Description: It selects the peaking time for the slow (shape) channel.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_PeakingTime(Tango::Attribute &attr);
	virtual void write_PeakingTime(Tango::WAttribute &attr);
	virtual bool is_PeakingTime_allowed(Tango::AttReqType type);
/**
 *	Attribute PileupReject related methods
 *	Description: It`s used to enable or disable Pile-up Rejection.
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_PileupReject(Tango::Attribute &attr);
	virtual void write_PileupReject(Tango::WAttribute &attr);
	virtual bool is_PileupReject_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA1HT related methods
 *	Description: SCA1 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA1HT(Tango::Attribute &attr);
	virtual void write_SCA1HT(Tango::WAttribute &attr);
	virtual bool is_SCA1HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA1LT related methods
 *	Description: SCA1 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA1LT(Tango::Attribute &attr);
	virtual void write_SCA1LT(Tango::WAttribute &attr);
	virtual bool is_SCA1LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA2HT related methods
 *	Description: SCA2 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA2HT(Tango::Attribute &attr);
	virtual void write_SCA2HT(Tango::WAttribute &attr);
	virtual bool is_SCA2HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA2LT related methods
 *	Description: SCA2 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA2LT(Tango::Attribute &attr);
	virtual void write_SCA2LT(Tango::WAttribute &attr);
	virtual bool is_SCA2LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA3HT related methods
 *	Description: SCA3 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA3HT(Tango::Attribute &attr);
	virtual void write_SCA3HT(Tango::WAttribute &attr);
	virtual bool is_SCA3HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA3LT related methods
 *	Description: SCA3 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA3LT(Tango::Attribute &attr);
	virtual void write_SCA3LT(Tango::WAttribute &attr);
	virtual bool is_SCA3LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA4HT related methods
 *	Description: SCA4 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA4HT(Tango::Attribute &attr);
	virtual void write_SCA4HT(Tango::WAttribute &attr);
	virtual bool is_SCA4HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA4LT related methods
 *	Description: SCA4 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA4LT(Tango::Attribute &attr);
	virtual void write_SCA4LT(Tango::WAttribute &attr);
	virtual bool is_SCA4LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA5HT related methods
 *	Description: SCA5 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA5HT(Tango::Attribute &attr);
	virtual void write_SCA5HT(Tango::WAttribute &attr);
	virtual bool is_SCA5HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA5LT related methods
 *	Description: SCA5 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA5LT(Tango::Attribute &attr);
	virtual void write_SCA5LT(Tango::WAttribute &attr);
	virtual bool is_SCA5LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA6HT related methods
 *	Description: SCA6 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA6HT(Tango::Attribute &attr);
	virtual void write_SCA6HT(Tango::WAttribute &attr);
	virtual bool is_SCA6HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA6LT related methods
 *	Description: SCA6 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA6LT(Tango::Attribute &attr);
	virtual void write_SCA6LT(Tango::WAttribute &attr);
	virtual bool is_SCA6LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA7HT related methods
 *	Description: SCA7 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA7HT(Tango::Attribute &attr);
	virtual void write_SCA7HT(Tango::WAttribute &attr);
	virtual bool is_SCA7HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA7LT related methods
 *	Description: SCA7 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA7LT(Tango::Attribute &attr);
	virtual void write_SCA7LT(Tango::WAttribute &attr);
	virtual bool is_SCA7LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA8HT related methods
 *	Description: SCA8 High Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA8HT(Tango::Attribute &attr);
	virtual void write_SCA8HT(Tango::WAttribute &attr);
	virtual bool is_SCA8HT_allowed(Tango::AttReqType type);
/**
 *	Attribute SCA8LT related methods
 *	Description: SCA8 Low Threshold
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SCA8LT(Tango::Attribute &attr);
	virtual void write_SCA8LT(Tango::WAttribute &attr);
	virtual bool is_SCA8LT_allowed(Tango::AttReqType type);
/**
 *	Attribute SlowCount related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_SlowCount(Tango::Attribute &attr);
	virtual bool is_SlowCount_allowed(Tango::AttReqType type);
/**
 *	Attribute TotalGain related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_TotalGain(Tango::Attribute &attr);
	virtual bool is_TotalGain_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI1 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI1(Tango::Attribute &attr);
	virtual bool is_CountsRoI1_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI2 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI2(Tango::Attribute &attr);
	virtual bool is_CountsRoI2_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI3 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI3(Tango::Attribute &attr);
	virtual bool is_CountsRoI3_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI4 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI4(Tango::Attribute &attr);
	virtual bool is_CountsRoI4_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI5 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI5(Tango::Attribute &attr);
	virtual bool is_CountsRoI5_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI6 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI6(Tango::Attribute &attr);
	virtual bool is_CountsRoI6_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI7 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI7(Tango::Attribute &attr);
	virtual bool is_CountsRoI7_allowed(Tango::AttReqType type);
/**
 *	Attribute CountsRoI8 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_CountsRoI8(Tango::Attribute &attr);
	virtual bool is_CountsRoI8_allowed(Tango::AttReqType type);
/**
 *	Attribute Spectrum related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Spectrum max = 8192
 */
	virtual void read_Spectrum(Tango::Attribute &attr);
	virtual bool is_Spectrum_allowed(Tango::AttReqType type);


	//--------------------------------------------------------
	/**
	 *	Method      : AmptekPX5::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();



//	Command related methods
public:
	/**
	 *	Command State related method
	 *	Description: This command gets the device state (stored in its device_state data member) and returns it to the caller.
	 *
	 *	@returns Device state
	 */
	virtual Tango::DevState dev_state();
	/**
	 *	Command SetTextConfiguration related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void set_text_configuration(const Tango::DevVarStringArray *argin);
	virtual bool is_SetTextConfiguration_allowed(const CORBA::Any &any);
	/**
	 *	Command GetTextConfiguration related method
	 *	Description: 
	 *
	 *	@param argin 
	 *	@returns 
	 */
	virtual Tango::DevVarStringArray *get_text_configuration(const Tango::DevVarStringArray *argin);
	virtual bool is_GetTextConfiguration_allowed(const CORBA::Any &any);
	/**
	 *	Command Echo related method
	 *	Description: 
	 *
	 *	@param argin 
	 *	@returns 
	 */
	virtual Tango::DevString echo(Tango::DevString argin);
	virtual bool is_Echo_allowed(const CORBA::Any &any);
	/**
	 *	Command Enable related method
	 *	Description: 
	 *
	 */
	virtual void enable();
	virtual bool is_Enable_allowed(const CORBA::Any &any);
	/**
	 *	Command Disable related method
	 *	Description: 
	 *
	 */
	virtual void disable();
	virtual bool is_Disable_allowed(const CORBA::Any &any);
	/**
	 *	Command ClearSpectrum related method
	 *	Description: 
	 *
	 */
	virtual void clear_spectrum();
	virtual bool is_ClearSpectrum_allowed(const CORBA::Any &any);
	/**
	 *	Command LatchGetClearSCA related method
	 *	Description: 
	 *
	 *	@returns 
	 */
	virtual Tango::DevVarULongArray *latch_get_clear_sca();
	virtual bool is_LatchGetClearSCA_allowed(const CORBA::Any &any);
	/**
	 *	Command ClearInputBuffer related method
	 *	Description: Clears the socket from any buffered incoming data.
	 *
	 */
	virtual void clear_input_buffer();
	virtual bool is_ClearInputBuffer_allowed(const CORBA::Any &any);
	/**
	 *	Command AutoTune related method
	 *	Description: This Command execute AutoTune Process
	 *
	 */
	virtual void auto_tune();
	virtual bool is_AutoTune_allowed(const CORBA::Any &any);


	//--------------------------------------------------------
	/**
	 *	Method      : AmptekPX5::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(AmptekPX5::Additional Method prototypes) ENABLED START -----*/

	std::string read_parameter(std::string cmd);
	void write_parameter(std::string cmd, std::string value);
	void update_total_gain();
	void update_flat_top_width();
	void update_peaking_time();
	static void* Auto_Tune_Thread(void *arg);
	void send_exception(std::string msg, std::string func);



	//	Additional Method prototypes

	/*----- PROTECTED REGION END -----*/	//	AmptekPX5::Additional Method prototypes
};

/*----- PROTECTED REGION ID(AmptekPX5::Additional Classes Definitions) ENABLED START -----*/

	//	Additional Classes definitions
       

	/*----- PROTECTED REGION END -----*/	//	AmptekPX5::Additional Classes Definitions

}	//	End of namespace

#endif   //	AmptekPX5_H
